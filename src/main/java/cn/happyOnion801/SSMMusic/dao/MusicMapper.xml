<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.happyOnion801.SSMMusic.dao.MusicMapper">
    <resultMap id="BaseResultMap" type="cn.happyOnion801.SSMMusic.bean.Music">
        <id column="musicId" jdbcType="INTEGER" property="musicid"/>
        <result column="musicName" jdbcType="VARCHAR" property="musicname"/>
        <result column="musicPhotoURL" jdbcType="VARCHAR" property="musicphotourl"/>
        <result column="singerId" jdbcType="INTEGER" property="singerid"/>
        <result column="musicHot" jdbcType="INTEGER" property="musichot"/>
        <result column="lyricURL" jdbcType="VARCHAR" property="lyricurl"/>
        <result column="musicTypeId" jdbcType="INTEGER" property="musictypeid"/>
        <result column="songURL" jdbcType="VARCHAR" property="songurl"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="musicTime" jdbcType="VARCHAR" property="musictime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        musicId
        , musicName, musicPhotoURL, singerId, musicHot, lyricURL, musicTypeId, songURL,
    time, musicTime
    </sql>
    <select id="selectByExample" parameterType="cn.happyOnion801.SSMMusic.bean.MusicExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from music
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectAll" resultType="cn.happyOnion801.SSMMusic.bean.Music">
        select m.*, s.singerName, t.musicTypeName
        from music as m
        left join singer as s on m.singerId=s.singerId
        left join musictype as t on m.musicTypeId=t.musicTypeId
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from music
        where musicId = #{musicid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from music
        where musicId = #{musicid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.happyOnion801.SSMMusic.bean.MusicExample">
        delete from music
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.happyOnion801.SSMMusic.bean.Music">
        insert into music (musicId, musicName, musicPhotoURL,
                           singerId, musicHot, lyricURL,
                           musicTypeId, songURL, time,
                           musicTime)
        values (#{musicid,jdbcType=INTEGER}, #{musicname,jdbcType=VARCHAR}, #{musicphotourl,jdbcType=VARCHAR},
                #{singerid,jdbcType=INTEGER}, #{musichot,jdbcType=INTEGER}, #{lyricurl,jdbcType=VARCHAR},
                #{musictypeid,jdbcType=INTEGER}, #{songurl,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP},
                #{musictime,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.happyOnion801.SSMMusic.bean.Music">
        insert into music
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="musicid != null">
                musicId,
            </if>
            <if test="musicname != null">
                musicName,
            </if>
            <if test="musicphotourl != null">
                musicPhotoURL,
            </if>
            <if test="singerid != null">
                singerId,
            </if>
            <if test="musichot != null">
                musicHot,
            </if>
            <if test="lyricurl != null">
                lyricURL,
            </if>
            <if test="musictypeid != null">
                musicTypeId,
            </if>
            <if test="songurl != null">
                songURL,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="musictime != null">
                musicTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="musicid != null">
                #{musicid,jdbcType=INTEGER},
            </if>
            <if test="musicname != null">
                #{musicname,jdbcType=VARCHAR},
            </if>
            <if test="musicphotourl != null">
                #{musicphotourl,jdbcType=VARCHAR},
            </if>
            <if test="singerid != null">
                #{singerid,jdbcType=INTEGER},
            </if>
            <if test="musichot != null">
                #{musichot,jdbcType=INTEGER},
            </if>
            <if test="lyricurl != null">
                #{lyricurl,jdbcType=VARCHAR},
            </if>
            <if test="musictypeid != null">
                #{musictypeid,jdbcType=INTEGER},
            </if>
            <if test="songurl != null">
                #{songurl,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="musictime != null">
                #{musictime,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.happyOnion801.SSMMusic.bean.MusicExample" resultType="java.lang.Long">
        select count(*) from music
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update music
        <set>
            <if test="record.musicid != null">
                musicId = #{record.musicid,jdbcType=INTEGER},
            </if>
            <if test="record.musicname != null">
                musicName = #{record.musicname,jdbcType=VARCHAR},
            </if>
            <if test="record.musicphotourl != null">
                musicPhotoURL = #{record.musicphotourl,jdbcType=VARCHAR},
            </if>
            <if test="record.singerid != null">
                singerId = #{record.singerid,jdbcType=INTEGER},
            </if>
            <if test="record.musichot != null">
                musicHot = #{record.musichot,jdbcType=INTEGER},
            </if>
            <if test="record.lyricurl != null">
                lyricURL = #{record.lyricurl,jdbcType=VARCHAR},
            </if>
            <if test="record.musictypeid != null">
                musicTypeId = #{record.musictypeid,jdbcType=INTEGER},
            </if>
            <if test="record.songurl != null">
                songURL = #{record.songurl,jdbcType=VARCHAR},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.musictime != null">
                musicTime = #{record.musictime,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update music
        set musicId = #{record.musicid,jdbcType=INTEGER},
        musicName = #{record.musicname,jdbcType=VARCHAR},
        musicPhotoURL = #{record.musicphotourl,jdbcType=VARCHAR},
        singerId = #{record.singerid,jdbcType=INTEGER},
        musicHot = #{record.musichot,jdbcType=INTEGER},
        lyricURL = #{record.lyricurl,jdbcType=VARCHAR},
        musicTypeId = #{record.musictypeid,jdbcType=INTEGER},
        songURL = #{record.songurl,jdbcType=VARCHAR},
        time = #{record.time,jdbcType=TIMESTAMP},
        musicTime = #{record.musictime,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.happyOnion801.SSMMusic.bean.Music">
        update music
        <set>
            <if test="musicname != null">
                musicName = #{musicname,jdbcType=VARCHAR},
            </if>
            <if test="musicphotourl != null">
                musicPhotoURL = #{musicphotourl,jdbcType=VARCHAR},
            </if>
            <if test="singerid != null">
                singerId = #{singerid,jdbcType=INTEGER},
            </if>
            <if test="musichot != null">
                musicHot = #{musichot,jdbcType=INTEGER},
            </if>
            <if test="lyricurl != null">
                lyricURL = #{lyricurl,jdbcType=VARCHAR},
            </if>
            <if test="musictypeid != null">
                musicTypeId = #{musictypeid,jdbcType=INTEGER},
            </if>
            <if test="songurl != null">
                songURL = #{songurl,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="musictime != null">
                musicTime = #{musictime,jdbcType=VARCHAR},
            </if>
        </set>
        where musicId = #{musicid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.happyOnion801.SSMMusic.bean.Music">
        update music
        set musicName     = #{musicname,jdbcType=VARCHAR},
            musicPhotoURL = #{musicphotourl,jdbcType=VARCHAR},
            singerId      = #{singerid,jdbcType=INTEGER},
            musicHot      = #{musichot,jdbcType=INTEGER},
            lyricURL      = #{lyricurl,jdbcType=VARCHAR},
            musicTypeId   = #{musictypeid,jdbcType=INTEGER},
            songURL       = #{songurl,jdbcType=VARCHAR},
            time          = #{time,jdbcType=TIMESTAMP},
            musicTime     = #{musictime,jdbcType=VARCHAR}
        where musicId = #{musicid,jdbcType=INTEGER}
    </update>
    <update id="setTypeToOther">
        update music set singerId = 126 where singerId = #{sid}
    </update>
</mapper>